# Example .env file for Q-up application
# COPY this file to .env and replace the placeholder values with your actual credentials
# DO NOT commit .env file to Git - it should be in .gitignore

# AWS S3 Configuration (REQUIRED for file uploads to work properly)
AWS_ACCESS_KEY_ID=YOUR_AWS_ACCESS_KEY_ID_HERE
AWS_SECRET_ACCESS_KEY=YOUR_AWS_SECRET_ACCESS_KEY_HERE
AWS_STORAGE_BUCKET_NAME=qup-media-files
AWS_S3_REGION_NAME=eu-north-1

# Additional S3 Configuration (OPTIONAL - defaults shown)
# Set to 'False' if you have SSL certificate validation issues
AWS_S3_VERIFY=True
# Maximum size for files kept in memory (in bytes, default 10MB)
AWS_S3_MAX_MEMORY_SIZE=10485760
# S3 signature version, use s3v4 for newer regions
AWS_S3_SIGNATURE_VERSION=s3v4
# Addressing style, virtual or path
AWS_S3_ADDRESSING_STYLE=virtual

# Important note: The S3 bucket is configured with "Bucket owner enforced" Object Ownership
# which means ACLs are disabled. Do not set AWS_DEFAULT_ACL or include ACL parameters in uploads.
# Public access should be granted via bucket policy instead.

# Django Configuration
DJANGO_SECRET_KEY=django-insecure-fh&k6=oa(wn$kx!$senwp)y9f2a-r=cfirgc3h(ghogek827wz
DJANGO_DEBUG=False

# Note: To troubleshoot S3 uploads, run the fix_s3_uploads.py script:
# - To verify S3 connection and check for missing files: python fix_s3_uploads.py --verify-only
# - To verify and re-upload missing files: python fix_s3_uploads.py 