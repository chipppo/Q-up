"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from datetime import timedelta
from pathlib import Path
import os

# Път до коренната директория на проекта
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-fh&k6=oa(wn$kx!$senwp)y9f2a-r=cfirgc3h(ghogek827wz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    '51.20.183.126', 
    'localhost',
    '127.0.0.1',
]

#модел за потребители вместо стандартния
AUTH_USER_MODEL = 'base.MyUser'

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
    'base',
    'storages',
]

# Настройки на АПИ за JWT автентикация
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
}

# Настройки на JWT токени
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': True,
    'ALGORITHM': 'HS256',
    'AUTH_HEADER_TYPES': ('Bearer',),
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Разрешава CORS заявки от всички домейни - опасно 
CORS_ALLOW_ALL_ORIGINS = True

# Разрешава изпращане на credentials (cookies, auth headers) при CORS заявки
CORS_ALLOW_CREDENTIALS = True

# Настройки за медийни файлове (качени от потребители)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Основен URL конфигурационен файл
ROOT_URLCONF = 'backend.urls'

# Настройки на шаблони
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Настройки на база данни
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


#правила за сигурност
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


#интернационализация
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

STATIC_URL = 'static/'

# Тип на първичния ключ по подразбиране
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# URL на фронтенд частта за възстановяване на пароли
FRONTEND_URL = 'http://localhost:5173'

# Настройки на имейл за Gmail
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'qupbot@gmail.com'
EMAIL_HOST_PASSWORD = 'aovngiuobwwrlcrz' 
DEFAULT_FROM_EMAIL = 'Q-up Support qupbot@gmail.com'

# Време за валидност на линка за възстановяване на парола (в секунди)
PASSWORD_RESET_TIMEOUT = 3600

# AWS S3 Settings (using environment variables)
AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID') # MUST be set in environment
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY') # MUST be set in environment
AWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME') # MUST be set in environment
AWS_S3_REGION_NAME = os.environ.get('AWS_S3_REGION_NAME') # MUST be set in environment

# S3 Configuration
# Ensure the variables above are set in the environment where Django runs
if AWS_ACCESS_KEY_ID and AWS_STORAGE_BUCKET_NAME:
    AWS_S3_FILE_OVERWRITE = False
    AWS_S3_SIGNATURE_VERSION = 's3v4'
    AWS_S3_OBJECT_PARAMETERS = {
        'CacheControl': 'max-age=86400',
    }
    DEFAULT_FILE_STORAGE = 'backend.storage_backends.MediaStorage'
    STATICFILES_STORAGE = 'backend.storage_backends.StaticStorage'
    S3_URL = f'https://{AWS_STORAGE_BUCKET_NAME}.s3.{AWS_S3_REGION_NAME}.amazonaws.com'
    STATIC_URL = f'{S3_URL}/static/'
    MEDIA_URL = f'{S3_URL}/media/'
    MEDIA_ROOT = ''
else:
    # Fallback ONLY if critical AWS vars aren't set (e.g., local dev without S3)
    print("WARNING: AWS S3 environment variables not set. Falling back to local file storage.")
    MEDIA_URL = '/media/'
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
    STATIC_URL = '/static/'
    DEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'
    STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'

# Configure CORS to allow access to S3 resources
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
    "http://127.0.0.1:5173",
    "http://localhost:8000",
    "http://51.20.183.126",
]

# Ensure any standalone definitions of MEDIA_URL, MEDIA_ROOT, STATIC_URL below are removed or commented out
# For example:
# MEDIA_URL = '/media/' # REMOVE or comment out
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media') # REMOVE or comment out
# STATIC_URL = 'static/' # REMOVE or comment out
